Here are a few notes about building Glide3x from CVS.

The Glide source trees are branced by platform and the platform names are
internal names used at 3dfx.  Since theses name may not make sense to others
here is a quick list.

sst1:  Voodoo Graphics
sst96: Voodoo Rush
cvg:   Voodoo 2
h3:    Voodoo Banshee/Voodoo 3
h5:    The VSA-100 chipset used in the Voodoo4 and Voodoo5 line of products.

There is a single toplevel makefile for glide3x.  To select a build
for either cvg or h3 set FX_GLIDE_HW to either cvg, h3, or h5.  The
default is to build for h3.  Note that the h5 tree has a special build
script, swlibs/include/make/napalmbuild.linux.  This script should be
made executable and run to build the h5 glide library.  There is no
Glide3x project for sst1 or sst96.

All glide source trees use a common set of libraries kept in the
swlibs branch.  In order to build any glide library the swlibs branch
must be moved inside the glide3x directory.  The swlibs branch is not
stored here within the glide3x cvs tree because it is also shared with
the glide2x branch.

There are many other environment variables used to control the Glide
build.  Here is a listing of some of the important ones:

DEBUG=1:               Turn on debugging information, note this disables 
                       the asm optimizations.
FX_GLIDE_PIC=1:        Enable PIC in shared libraries.
FX_GLIDE_CTRISETUP=1:  Use C versions as opposed to ASM versions of triangle
                       setup code.
GL_AMD3D=1:            Enable AMD 3DNow! optimizations.  Note this is broken
                       on several platforms.

A special note about H3:
The Glide3 H3 source can be built as a DRI client or as a standalone library.
Controlling which gets built is done by setting up symlinks.  Since CVS
doesn't understand symlinks the glide3x/h3 source is not setup to build in
either configuration.

To setup glide3x/h3 to build as a DRI client, create the following symlinks:
  h3/minihwc/linhwc.c.dri    --> h3/minihwc/linhwc.c
  h3/glide3/src/gglide.c.dri --> h3/glide3/src/gglide.c
  h3/glide3/src/gsst.c.dri   --> h3/glide3/src/gsst.c
  h3/glide3/src/glfb.c.dri   --> h3/glide3/src/glfb.c

To setup glide3x/h3 to build as a standalone library create the following 
symlinks:
  h3/minihwc/linhwc.c.save    --> h3/minihwc/linhwc.c
  h3/glide3/src/gglide.c.save --> h3/glide3/src/gglide.c
  h3/glide3/src/gsst.c.save   --> h3/glide3/src/gsst.c
  h3/glide3/src/glfb.c.save   --> h3/glide3/src/glfb.c

Support to make this happen automatically will be added in the future.

A special not about H5: 
The Glide3 H5 source can only be built as a DRI client, so the
symlinks necessary for the H3 tree are not necessary for the H3 tree.
